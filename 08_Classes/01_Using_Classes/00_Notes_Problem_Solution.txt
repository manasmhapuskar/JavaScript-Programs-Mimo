Problem:
We'll work on a role-playing video game where players can choose
what type of character they want to be.


Task:
Since there'll be a lot of players with similar but distinct attributes,
we'll create them as objects with the help of 'class'.


Solution:
1.  Start by adding the 'class' keyword.
2.  Add the name of the class, 'Character' followed by braces.
3.  Add the 'constructor()' method along with the opening 
    and closing braces.
4.  Add the method parameters by starting with 'name'
    and followed by 'type'.
5.  Add the keyword used to refer to the current object: 'this'.
6.  Add the sign that follows the keyword 'this'
    and comes before the property name.
7.  Since we'll create a lot of different characters in the game,
    we'll need a 'name' property to differentiate them.
    Add the 'name' property.
8.  Add the sign required to assign a value to 'this.name'.
9.  Next, we'll set the value of the new object's 'name' property
    to the 'name' parameter we've sent through the constructor.
    Add 'name' as the value for 'this.name' and end with a semicolon.
10. Add the second property, 'type', followed by the '=' sign.
11. Add the 'type' parameter as a value to the 'this.type' property.
    Make sure to add a semicolon at the end.
12. Now that we've created our class, it's time to create a new object.
    How about we start with something all good stories need: a hero.
    Create a variable called 'hero'.
13. As we'll want to create a new object of class 'Character',
    we'll specify that with the 'new' keyword.
14. Add 'Character();' to create a new object of the 'Character' class.
15. We'll create a character called Margaret and make her a knight.
    We'll add both values as strings.
    Finish creating a new object by adding the correct values.
16. Time to add the yin to our yang.
    Create a variable called 'villain'.
17. Once again, add the 'new' keyword.
18. Create an object with 'name' set to "Tim"
    and the 'type' set to "Enchanter".
19. Display both objects.