Problem:
Let's write a program that uses 'lives' variables
to keep track of lives left in a video game.


Solution:
1.  Start by creating a variable named 'lives' and assigning it a value 2.
2.  Display "Lives: 2";
3.  Now it's time to update the value of the 'lives' variable.
    Start by coding lives.
4.  Update the variable's value so it subtracts one from it's current value.
5.  Let the user know how many lives they have left.
6.  Now, without changing the existing code,
    update the 'lives' variable so that it's value decreases by one.
7.  Display the lives left the same way as before.
8.  With lives now at 0, tell the user the game is over.



-------------------------------------------------------------------------------------------------



Problem:
Let's write a program that displays a list of mutual friends
by adding strings to a 'friends' variable.


Solution:
1.  Start by creating a 'friends' variable and
    assigning it the value "Mutual Friends".
2.  To see how the variable changes, let's display 'friends'.
3.  Since we need to add to the 'friends' variable's value,
    self-assign the 'friends' variable.
4.  Now, add " Jan," to the 'friends' variable's value.
5.  Add " Brett," to the 'friends' variable's value.
6.  To finish the list, add " Carly" to the 'friends' variable value. 



-------------------------------------------------------------------------------------------------



Problem:
A group of developers wrote buggy code for a debit account
that should track money added and removed over time.


Task:
Unfortunately, the money in the account doesn't update correctly
to $23 so we need to fix it using self-assignment.


Available:
console.log("$101 deposited");
account = 101;

console.log("$13 latte purchased");
account = account;

console.log("$65 TV purchased");

console.log("Account: $" + account);


Solution:
1.  Kick things off by creating a variable named 'account'
    and assigning it the value 0.
2.  For each transaction, the 'account' variable gets updated incorrectly.
    Let's fix the first one by updating 'account' to 'account + 101'.
3.  When the user purchases a latte, 
    the money in their wallet should decrease by 13.
4.  For the final purchase,
    the value of 'account' should decrease by 65.
5.  Experiment by changing the value of account.