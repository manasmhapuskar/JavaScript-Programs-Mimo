Problem:
A store wants to allow customers 
to review their most recent purchase online.


Task:
We'll help them out by creating a 'Customer' class.


Solution:
1.  Start by coding 'class Customer {}'.
    We'll use this class to create an object 
    every time a new customer makes a purchase.
2.  We'll initialize each customer object with the amount they paid.
    Add 'constructor(amount) {}' so that constructor receives it as a parameter.
3.  Add 'this.amount = amount;' so the constructor
    sets the 'amount' property on object instances.
4.  Each object should contain a method 
    that shows the details of their most recent purchase.
    We can start by adding 'viewDetails() {}'.
5.  Code 'console.log();' with the message, "'You paid ' + this.amount + ' USD'".
    This prints how much the customer paid in USD.
6.  Let's test the code we've written so far.
    Create a new instance named 'hanna' for Hanna, who just now spent $350.
7.  Hanna later decides to review her purchase.
    Call 'viewDetails()' on her object so she can see how much she paid.
8.  Our store is in the US but also ships to Europe.
    For them, the invoice won't be useful in USD.
    We can solve this with Polymorphism. 
    Let's create a subclass by adding 'class Overseas extends Customer {}'.
9.  Just as before, add an empty 'viewDetails()' method.
10. This time, the method must convert 'amount', which the store sets in USD, to EUR.
    To do this, add 'var euros = this.amount * 0.82;'.
11. Display the converted amount by adding 'console.log();'
    with "'You paid ' + euros + ' EUR'" inside the parentheses.
12. Let's test our code again, this time for an overseas customer.
    Create a new instance called 'hans' for Hans, who buys the same $350 item.
13. Hans wants to review his purchase. Call 'viewDetails()' on his object.